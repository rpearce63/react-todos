// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TodoList component should render properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoList
    todos={
      Array [
        Object {
          "complete": false,
          "id": 1,
          "text": "my todo",
        },
        Object {
          "complete": true,
          "id": 2,
          "text": "my other todo",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Todos
        </h3>,
        Array [
          <Connect(Todo)
            todo={
              Object {
                "complete": false,
                "id": 1,
                "text": "my todo",
              }
            }
          />,
          <Connect(Todo)
            todo={
              Object {
                "complete": true,
                "id": 2,
                "text": "my other todo",
              }
            }
          />,
        ],
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Todos",
        },
        "ref": null,
        "rendered": "Todos",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "todo": Object {
            "complete": false,
            "id": 1,
            "text": "my todo",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "todo": Object {
            "complete": true,
            "id": 2,
            "text": "my other todo",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Todos
          </h3>,
          Array [
            <Connect(Todo)
              todo={
                Object {
                  "complete": false,
                  "id": 1,
                  "text": "my todo",
                }
              }
            />,
            <Connect(Todo)
              todo={
                Object {
                  "complete": true,
                  "id": 2,
                  "text": "my other todo",
                }
              }
            />,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Todos",
          },
          "ref": null,
          "rendered": "Todos",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "todo": Object {
              "complete": false,
              "id": 1,
              "text": "my todo",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "todo": Object {
              "complete": true,
              "id": 2,
              "text": "my other todo",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
