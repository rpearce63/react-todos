// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Todo component should render properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Todo
    removeTodo={[MockFunction]}
    todo={
      Object {
        "complete": false,
        "id": 1,
        "text": "a todo",
      }
    }
    updateStatus={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          checked={false}
          onChange={[Function]}
          type="checkbox"
        />,
        <div
          id="todo_text"
        >
          a todo
        </div>,
        <div
          id="todo_remove"
          onClick={[Function]}
        >
           
          x
           
        </div>,
      ],
      "style": Object {
        "display": "flex",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "checked": false,
          "onChange": [Function],
          "type": "checkbox",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "a todo",
          "id": "todo_text",
        },
        "ref": null,
        "rendered": "a todo",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            " ",
            "x",
            " ",
          ],
          "id": "todo_remove",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          " ",
          "x",
          " ",
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            checked={false}
            onChange={[Function]}
            type="checkbox"
          />,
          <div
            id="todo_text"
          >
            a todo
          </div>,
          <div
            id="todo_remove"
            onClick={[Function]}
          >
             
            x
             
          </div>,
        ],
        "style": Object {
          "display": "flex",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "checked": false,
            "onChange": [Function],
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "a todo",
            "id": "todo_text",
          },
          "ref": null,
          "rendered": "a todo",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              " ",
              "x",
              " ",
            ],
            "id": "todo_remove",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            " ",
            "x",
            " ",
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
